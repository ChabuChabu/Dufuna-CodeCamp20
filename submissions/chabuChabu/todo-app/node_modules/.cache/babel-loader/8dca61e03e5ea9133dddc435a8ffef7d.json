{"ast":null,"code":"var _jsxFileName = \"/Users/chabuchabu/Desktop/todo-app/src/components/Todo.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(props) {\n  // const [isEditing,setEditing] = useState(false);\n  // const [newName, setNewName] = useState('');\n  // function handleChange(e) {\n  //     setNewName(e.target.value);\n  // }\n  // function handleSubmit(e) {\n  //     e.preventDefault();\n  //     props.editTask(props.id, newName);\n  //     setNewName(\"\");\n  //     setEditing(false);\n  // }\n  // const editingTemplate = (\n  //     <form className=\"stack-small\" onSubmit={handleSubmit}>\n  //       <div className=\"form-group\">\n  //         <label className=\"todo-label\" htmlFor={props.id}>\n  //           New name for {props.name}\n  //         </label>\n  //         <input \n  //             id={props.id} \n  //             className=\"todo-text\" \n  //             type=\"text\" \n  //             value={newName}\n  //             onChange={handleChange}              \n  //         />\n  //       </div>\n  //       <div className=\"btn-group\">\n  //         <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\n  //           Cancel\n  //           <span className=\"visually-hidden\">renaming {props.name}</span>\n  //         </button>\n  //         <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n  //           Save\n  //           <span className=\"visually-hidden\">new name for {props.name}</span>\n  //         </button>\n  //       </div>\n  //     </form>\n  //   );\n  //   const viewTemplate = (\n  //     <div className=\"stack-small\">\n  //       <div className=\"c-cb\">\n  //           <input\n  //             id={props.id}\n  //             type=\"checkbox\"\n  //             defaultChecked={props.completed}\n  //             onChange={() => props.toggleTaskCompleted(props.id)}\n  //           />\n  //           <label className=\"todo-label\" htmlFor={props.id}>\n  //             {props.name}\n  //           </label>\n  //         </div>\n  //         <div className=\"btn-group\">\n  //           <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n  //             Edit <span className=\"visually-hidden\">{props.name}</span>\n  //           </button>\n  //           <button\n  //             type=\"button\"\n  //             className=\"btn btn__danger\"\n  //             onClick={() => props.deleteTask(props.id)}\n  //           >\n  //             Delete <span className=\"visually-hidden\">{props.name}</span>\n  //           </button>\n  //         </div>\n  //     </div>\n  //   );\n  //  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/chabuchabu/Desktop/todo-app/src/components/Todo.js"],"names":["React","useState","Todo","props","id","completed","toggleTaskCompleted","name","deleteTask"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAE/B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACC,sBACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACC;AAAO,QAAA,EAAE,EAAEA,KAAK,CAACC,EAAjB;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,cAAc,EAAED,KAAK,CAACE,SAFvB;AAGA,QAAA,QAAQ,EAAE,MAAMF,KAAK,CAACG,mBAAN,CAA0BH,KAAK,CAACC,EAAhC;AAHhB;AAAA;AAAA;AAAA;AAAA,cADD,eAMC;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,OAAO,EAAED,KAAK,CAACC,EAA7C;AAAA,kBACGD,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAWD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,KAAhC;AAAA,yCACO;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCJ,KAAK,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAE,MAAMJ,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACC,EAAvB,CAHjB;AAAA,2CAKS;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCD,KAAK,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,gBALT;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BJ;KAhGuBL,I","sourcesContent":["import React,{useState} from 'react';\n\nexport default function Todo(props){\n\n    // const [isEditing,setEditing] = useState(false);\n    // const [newName, setNewName] = useState('');\n\n    // function handleChange(e) {\n    //     setNewName(e.target.value);\n    // }\n    // function handleSubmit(e) {\n    //     e.preventDefault();\n    //     props.editTask(props.id, newName);\n    //     setNewName(\"\");\n    //     setEditing(false);\n    // }\n\n    // const editingTemplate = (\n    //     <form className=\"stack-small\" onSubmit={handleSubmit}>\n    //       <div className=\"form-group\">\n    //         <label className=\"todo-label\" htmlFor={props.id}>\n    //           New name for {props.name}\n    //         </label>\n    //         <input \n    //             id={props.id} \n    //             className=\"todo-text\" \n    //             type=\"text\" \n    //             value={newName}\n    //             onChange={handleChange}              \n    //         />\n    //       </div>\n    //       <div className=\"btn-group\">\n    //         <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\n    //           Cancel\n    //           <span className=\"visually-hidden\">renaming {props.name}</span>\n    //         </button>\n    //         <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n    //           Save\n    //           <span className=\"visually-hidden\">new name for {props.name}</span>\n    //         </button>\n    //       </div>\n    //     </form>\n    //   );\n    //   const viewTemplate = (\n    //     <div className=\"stack-small\">\n    //       <div className=\"c-cb\">\n    //           <input\n    //             id={props.id}\n    //             type=\"checkbox\"\n    //             defaultChecked={props.completed}\n    //             onChange={() => props.toggleTaskCompleted(props.id)}\n    //           />\n    //           <label className=\"todo-label\" htmlFor={props.id}>\n    //             {props.name}\n    //           </label>\n    //         </div>\n    //         <div className=\"btn-group\">\n    //           <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n    //             Edit <span className=\"visually-hidden\">{props.name}</span>\n    //           </button>\n    //           <button\n    //             type=\"button\"\n    //             className=\"btn btn__danger\"\n    //             onClick={() => props.deleteTask(props.id)}\n    //           >\n    //             Delete <span className=\"visually-hidden\">{props.name}</span>\n    //           </button>\n    //         </div>\n    //     </div>\n    //   );\n\n    //  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n     return (\n         <li className=\"todo stack-small\">\n         <div className=\"c-cb\">\n          <input id={props.id} \n           type=\"checkbox\"\n           defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)} \n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn\">\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button \n            type=\"button\" \n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n      </li>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}