{"ast":null,"code":"var _jsxFileName = \"/Users/chabuchabu/Desktop/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport \"./styles.css\";\nimport { nanoid } from \"nanoid\"; // const FILTER_MAP = {\n//   All_Items:() => true,\n//   Active: task => !task.completed,\n//   Completed: task => task.completed,\n// };\n// const FILTER_NAMES = Object.keys(FILTER_MAP);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All_Items');\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted \n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function clearCompletedTasks() {\n    const completed = tasks.filter(task => task.completed === false);\n    setTasks(completed);\n  }\n\n  function allTasks() {\n    let allTasks = tasks.filter(task => task.completed === false || task.completed === true);\n    setTasks(allTasks);\n    console.log(allTasks);\n  }\n\n  let taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 6\n  }, this));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this));\n  const completedTasks = tasks.filter(task => task.completed === false);\n  let remainingTasks = completedTasks.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"pageTitle\",\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"tasklist\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              addTask: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"listItems\",\n              children: tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n                class: `todo-item ${task.completed ? \"completed\" : ''}`,\n                children: /*#__PURE__*/_jsxDEV(Todo, {\n                  id: task.id,\n                  name: task.name,\n                  completed: task.completed,\n                  toggleTaskCompleted: toggleTaskCompleted,\n                  clearCompletedTasks: clearCompletedTasks,\n                  allTasks: allTasks\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 24\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-list\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"items\",\n                children: [remainingTasks, \" items left\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"all-items\",\n                children: filterList[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"active\",\n                children: filterList[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"completed\",\n                children: filterList[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"clear\",\n                onClick: clearCompletedTasks,\n                children: \"XClear Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BQ3M51JTY8mHLlCRmB4CxG6L0Eo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chabuchabu/Desktop/todo-app/src/App.js"],"names":["React","useState","Todo","Form","FilterButton","nanoid","App","props","tasks","setTasks","filter","setFilter","addTask","name","newTask","id","completed","toggleTaskCompleted","updatedTasks","map","task","clearCompletedTasks","allTasks","console","log","taskList","FILTER_MAP","filterList","FILTER_NAMES","completedTasks","remainingTasks","length"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport \"./styles.css\";\nimport {nanoid} from \"nanoid\";\n\n\n// const FILTER_MAP = {\n//   All_Items:() => true,\n//   Active: task => !task.completed,\n//   Completed: task => task.completed,\n\n// };\n\n// const FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All_Items');\n\n  function addTask(name) {\n    const newTask = {id: \"todo-\" + nanoid(),name: name, completed:false}\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if(id === task.id) {\n      // use object spread to make a new object\n      // whose `completed` prop has been inverted \n      return {...task,completed: !task.completed}\n      }\n      return task;\n    })\n    setTasks(updatedTasks);\n  }\n \n  function clearCompletedTasks(){\n     const completed = tasks.filter(task => task.completed === false)\n     setTasks(completed);\n  }\n\n  function allTasks(){\n    let allTasks = tasks.filter(task => task.completed === false || task.completed === true)\n    setTasks(allTasks)\n    console.log(allTasks);\n  }\n \n   let taskList = tasks\n   .filter(FILTER_MAP[filter])\n   .map(task => (\n     <Todo \n       id={task.id} \n        name={task.name} \n        completed={task.completed}\n        key={task.id}\n     />\n   ));\n\n   const filterList = FILTER_NAMES.map(name => (\n    <FilterButton \n      key={name} \n      name={name}\n      isPressed={name === filter} \n      setFilter={setFilter}\n    />\n   ));\n \n  const completedTasks = tasks.filter(task => task.completed === false)\n  let remainingTasks = completedTasks.length\n\n  return (\n    <div>\n      <header>\n           <h1 id=\"pageTitle\">Todo</h1>\n         <div className=\"container\">  \n           <div className=\"main\">\n              <section className=\"tasklist\"> \n                 <Form addTask={addTask}/>\n                 <ul className=\"listItems\">{tasks\n                    .filter(FILTER_MAP[filter])\n                    .map(task => (\n                       <li class={`todo-item ${ task.completed ? \"completed\" :'' }`}>\n                       <Todo \n                        id={task.id} \n                        name={task.name} \n                        completed={task.completed}\n                        key={task.id}\n                        toggleTaskCompleted={toggleTaskCompleted}\n                        clearCompletedTasks={clearCompletedTasks}\n                        allTasks={allTasks}\n                    /></li>\n                    ))}\n               </ul>\n             </section> \n           </div> \n           <div className=\"footer\">\n            <div className=\"footer-list\">\n              <ul>\n                  <li id=\"items\">{remainingTasks} items left</li>\n                  <li id=\"all-items\">{filterList[0]}</li>\n                   {/* <li id=\"all-items\" onClick={allTasks}>all tasks</li> */}\n                  <li id=\"active\">{filterList[1]}</li>\n                  <li id=\"completed\">{filterList[2]}</li>\n                  <li id=\"clear\" onClick={clearCompletedTasks}>XClear Completed</li>\n               </ul>\n            </div>\n           </div>\n        </div>  \n      </header>  \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}