{"ast":null,"code":"var _jsxFileName = \"/Users/chabuchabu/Desktop/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport \"./styles.css\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All_Items: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\n\nfunction App(props) {\n  _s();\n\n  var hold = \"All_Items\";\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All_Items'); // const [listedTasks, setcompletedTasks] = useState(props.completedTasks);\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted \n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  console.log(typeof hold);\n\n  function clearCompletedTasks() {\n    const completed = tasks.filter(task => task.completed === false);\n    setTasks(completed);\n  } //  function allTasks(){\n  //    const completedTasks = tasks.filter(task => task.completed === true || task.completed === false)\n  //    setcompletedTasks(completedTasks)\n  //  }\n\n\n  let taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 6\n  }, this));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this));\n  const completedTasks = tasks.filter(task => task.completed === false);\n  let remainingTasks = completedTasks.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"pageTitle\",\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"tasklist\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              addTask: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 18\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"listItems\",\n              children: tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n                class: `todo-item ${task.completed ? \"completed\" : ''}`,\n                children: /*#__PURE__*/_jsxDEV(Todo, {\n                  id: task.id,\n                  name: task.name,\n                  completed: task.completed,\n                  toggleTaskCompleted: toggleTaskCompleted,\n                  clearCompletedTasks: clearCompletedTasks // allTasks={allTasks}\n\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 24\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footer-list\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"items\",\n                children: [remainingTasks, \" items left\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"all-items\",\n                children: filterList[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"active\",\n                children: filterList[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"completed\",\n                children: filterList[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                id: \"clear\",\n                onClick: clearCompletedTasks,\n                children: \"XClear Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BQ3M51JTY8mHLlCRmB4CxG6L0Eo=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/chabuchabu/Desktop/todo-app/src/App.js"],"names":["React","useState","Todo","Form","FilterButton","nanoid","FILTER_MAP","All_Items","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","hold","tasks","setTasks","filter","setFilter","addTask","name","newTask","id","toggleTaskCompleted","updatedTasks","map","console","log","clearCompletedTasks","taskList","filterList","completedTasks","remainingTasks","length"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport \"./styles.css\";\nimport {nanoid} from \"nanoid\";\n\n\nconst FILTER_MAP = {\n  All_Items:() => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed,\n\n};\n\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App(props) {\n\n  var hold = \"All_Items\";\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All_Items');\n  // const [listedTasks, setcompletedTasks] = useState(props.completedTasks);\n\n\n  function addTask(name) {\n    const newTask = {id: \"todo-\" + nanoid(),name: name, completed:false}\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if(id === task.id) {\n      // use object spread to make a new object\n      // whose `completed` prop has been inverted \n      return {...task,completed: !task.completed}\n      }\n      return task;\n    })\n    setTasks(updatedTasks);\n  }\n console.log(typeof hold);\n  function clearCompletedTasks(){\n     const completed = tasks.filter(task => task.completed === false)\n     setTasks(completed);\n  }\n  \n//  function allTasks(){\n//    const completedTasks = tasks.filter(task => task.completed === true || task.completed === false)\n//    setcompletedTasks(completedTasks)\n  \n//  }\n\n   let taskList = tasks\n   .filter(FILTER_MAP[filter])\n   .map(task => (\n     <Todo \n       id={task.id} \n        name={task.name} \n        completed={task.completed}\n        key={task.id}\n     />\n   ));\n   \n   const filterList = FILTER_NAMES.map(name => (\n    <FilterButton \n      key={name} \n      name={name}\n      isPressed={name === filter} \n      setFilter={setFilter}\n    />\n   ));\n \n  const completedTasks = tasks.filter(task => task.completed === false)\n  let remainingTasks = completedTasks.length\n\n  return (\n    <div>\n      <header>\n           <h1 id=\"pageTitle\">Todo</h1>\n         <div className=\"container\">  \n           <div className=\"main\">\n              <section className=\"tasklist\"> \n                 <Form addTask={addTask}/>\n                 <ul className=\"listItems\">{tasks\n                    .filter(FILTER_MAP[filter])\n                    .map(task => (\n                       <li class={`todo-item ${ task.completed ? \"completed\" :'' }`}>\n                       <Todo \n                        id={task.id} \n                        name={task.name} \n                        completed={task.completed}\n                        key={task.id}\n                        toggleTaskCompleted={toggleTaskCompleted}\n                        clearCompletedTasks={clearCompletedTasks}\n                        // allTasks={allTasks}\n                    /></li>\n                    ))}\n               </ul>\n             </section> \n           </div> \n           <div className=\"footer\">\n            <div className=\"footer-list\">\n              <ul>\n                 \n                  <li id=\"items\">{remainingTasks} items left</li>\n                  <li id=\"all-items\">{filterList[0]}</li>\n                  {/* <li id=\"all-items\" onClick={allTasks}>all Items</li> */}\n                  <li id=\"active\">{filterList[1]}</li>\n                  <li id=\"completed\">{filterList[2]}</li>\n                  <li id=\"clear\" onClick={clearCompletedTasks}>XClear Completed</li>\n               </ul>\n            </div>\n           </div>\n        </div>  \n      </header>  \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}