{"ast":null,"code":"var _jsxFileName = \"/Users/chabuchabu/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted \n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    console.log(id);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn toggle-btn\",\n        \"aria-pressed\": \"false\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Show \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \" tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn toggle-btn\",\n        \"aria-pressed\": \"false\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Show \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \" tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: [\" \", headingText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      role: \"list\",\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pjFsLTHS1Kjd+NDyC2kZTexpLic=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chabuchabu/todo-app/src/App.js"],"names":["React","useState","Todo","Form","FilterButton","nanoid","App","props","tasks","setTasks","addTask","name","newTask","id","completed","tasksNoun","taskList","length","headingText","toggleTaskCompleted","updatedTasks","map","task","deleteTask","console","log"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport Todo from \"./components/Todo\";\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport {nanoid} from \"nanoid\";\n\n\nfunction App(props) {\n\n  const[tasks, setTasks] = useState(props.tasks)\n\n  function addTask(name) {\n    const newTask = {id: \"todo-\" + nanoid(),name: name, completed:false}\n    setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if(id === task.id) {\n      // use object spread to make a new object\n      // whose `completed` prop has been inverted \n      return {...task,completed: !task.completed}\n      }\n      return task;\n    })\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    console.log(id);\n  }\n\n  const taskList = tasks.map(task => (\n    <Todo \n       id={task.id} \n       name={task.name} \n       completed={task.completed} \n       key={task.id}\n       toggleTaskCompleted={toggleTaskCompleted}\n       deleteTask={deleteTask}\n    />\n  ));\n \n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo</h1>\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        \n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"false\">\n          <span className=\"visually-hidden\">Show </span>\n          <span>Active</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"false\">\n          <span className=\"visually-hidden\">Show </span>\n          <span>Completed</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n      </div>\n      <h2 id=\"list-heading\"> {headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      \n      </ul>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}